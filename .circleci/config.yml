version: 2.1

commands:
  restore-carthage-cache:
    parameters:
      xcode:
        type: string
    steps:
      - restore_cache:
          key: carthage-cache-v1-{{ checksum "Cartfile.resolved" }}-<< parameters.xcode >>

  save-carthage-cache:
    parameters:
      xcode:
        type: string
    steps:
      - save_cache:
          key: carthage-cache-v1-{{ checksum "Cartfile.resolved" }}-<< parameters.xcode >>
          paths:
            - Carthage

  save-api-diff-cache:
    parameters:
      key:
        type: string    
      is_template:
        type: boolean
        default: false
    steps:
      - when:
          condition: << parameters.is_template >>
          steps: 
            - save_cache:
                key: nav-sdk-diff-cache-v5-{{ << parameters.key >> }}
                paths:
                  - api_logs
      - unless:
          condition: << parameters.is_template >>
          steps:
            - save_cache:
                key: nav-sdk-diff-cache-v5-<< parameters.key >>
                paths:
                  - api_logs

  restore-api-diff-cache:
    parameters:
      key:
        type: string
      is_template:
        type: boolean
        default: false
    steps:
      - when:
          condition: << parameters.is_template >>
          steps: 
            - restore_cache:
                key: nav-sdk-diff-cache-v5-{{ << parameters.key >> }}
      - unless:
          condition: << parameters.is_template >>
          steps:
            - restore_cache:
                key: nav-sdk-diff-cache-v5-<< parameters.key >>

  build-api-diff-cli-tool:
    description: "Builds CLI tool which produce diff reports"
    parameters:
      sourcekitten-version:
        type: string
        default: "0.31.0"
      swift-api-diff-version:
        type: string
        default: v1.0.0
    steps:
      - restore-sourcekitten-cache:
          version: << parameters.sourcekitten-version >>
      - run:
          name: Install Sourcekitten
          command: if [ ! -d /usr/local/Cellar/sourcekitten/<< parameters.sourcekitten-version >> ]; then brew update && brew install sourcekitten; fi
      - save-sourcekitten-cache:
          version: << parameters.sourcekitten-version >>      
      - add_ssh_keys:
          fingerprints:
            - "8c:24:d5:99:22:42:45:8f:16:6f:8d:24:ee:08:97:13"
      - run:
          name: Checkout swift-api-diff CLI
          command: cd Scripts && git clone git@github.com:mapbox/swift-api-diff.git --branch <<parameters.swift-api-diff-version>> --depth 1
      - restore_cache:
          key: swift-api-diff-v1-<<parameters.swift-api-diff-version>>
      - run:
          name: Building API Diff Report
          command: if [ ! -f "scripts/swift-api-diff/.build/release/swift-api-diff" ]; then cd scripts/swift-api-diff && swift build --configuration release; fi
      - save_cache:
          key: swift-api-diff-v1-<<parameters.swift-api-diff-version>>
          paths:
            - scripts/swift-api-diff/.build/release/swift-api-diff

  save-sourcekitten-cache:
    description: "Save sourcekitten binary"
    parameters:
      version: 
        type: string
    steps:
      - save_cache:
          key: sourcekitten-v2-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-<< parameters.version >>
          paths:
            - /usr/local/Cellar/sourcekitten/<< parameters.version >>
            - /usr/local/bin/sourcekitten

  restore-sourcekitten-cache:    
    description: "Restore sourcekitten binary"
    parameters:
      version: 
        type: string
    steps:
      - restore_cache:
          key: sourcekitten-v2-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-<< parameters.version >>

  run_api_log_in_current_env:
    parameters:
      iOS:
        type: string
      device:
        type: string
    steps:
      - run:
          name: Generating MapboxCoreNavigation API Log
          command: ./scripts/swift-api-diff/.build/release/swift-api-diff log ./ $CIRCLE_WORKING_DIRECTORY/api_logs/core_navigation_log.json doc --module-name MapboxCoreNavigation -- -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' -scheme MapboxNavigation-Package build
      - run:
          name: Generating MapboxNavigation API Log
          command: ./scripts/swift-api-diff/.build/release/swift-api-diff log ./ $CIRCLE_WORKING_DIRECTORY/api_logs/navigation_log.json doc --module-name MapboxNavigation -- -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' -scheme MapboxNavigation-Package build

  carthage-bootstrap:
    steps:
      - run:
          name: Install Dependencies
          command: carthage bootstrap --platform ios --cache-builds --configuration Debug --use-netrc --use-xcframeworks

step-library:
  - &restore-cache-cocoapods
      restore_cache:
        keys:
          - nav-cache-pod-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Tests/CocoaPodsTest/PodInstall/Podfile.lock" }}
          - nav-cache-pod-v1

  - &restore-cache-cocoapods-installation
      restore_cache:
        keys:
          - 1-gems-{{ checksum "Gemfile.lock" }}

  - &install-cocoapods-installation
      run:
        name: Install cocoapods
        command: |
          bundle check || bundle install --path vendor/bundle --clean

  - &save-cache-cocoapods-installation
      save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  
  - &save-cache-cocoapods
      save_cache:
        key: nav-cache-pod-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Tests/CocoaPodsTest/PodInstall/Podfile.lock" }}
        paths:
          - Tests/CocoaPodsTest/PodInstall/Pods

  - &restore-cache-podmaster
      restore_cache:
        keys:
          - podmaster-cache

  - &save-cache-podmaster
      save_cache:
        key: podmaster-cache
        paths:
          - "~/.cocoapods/repos/master"

  - &prepare-mapbox-file
      run:
        name: Prepare .mapbox file
        command: |
          echo "foo" > ~/.mapbox

  - &prepare-netrc-file
      run:
        name: Prepare .netrc file
        command: |
          echo "machine api.mapbox.com" >> ~/.netrc
          echo "login mapbox" >> ~/.netrc
          echo "password $SDK_REGISTRY_TOKEN" >> ~/.netrc

  - &update-carthage-version
      run:
        name: Update Carthage version
        command: |
          curl -OL "https://github.com/Carthage/Carthage/releases/download/0.38.0/Carthage.pkg"
          sudo installer -pkg Carthage.pkg -target /

  - &verify-missing-localizable-strings
      run:
        name: Verify missing localizable strings
        command: |
          ./scripts/convert_string_files.sh
          git diff --exit-code -- */*/*.lproj

  - &add-github-to-known-hosts
      run:
        name: Add GitHub to known hosts
        command: |
          for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts

  - &build-Example
      run:
        name: Build Example
        command: |
          xcodebuild -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=14.4,name=iPhone 8 Plus' -project MapboxNavigation.xcodeproj -scheme Example clean build | xcpretty

  - &trigger-metrics
      run:
        name: Trigger metrics
        command: |
          if [ -n "${MOBILE_METRICS_TOKEN}" ]; then
            bash -c "curl -X POST --header \"Content-Type: application/json\" --data '{\"parameters\": {\"run_ios_navigation_benchmark\": true, \"ci_ref\": $CIRCLE_BUILD_NUM, \"target_branch\": \"${CIRCLE_SHA1}\" }}' https://circleci.com/api/v2/project/github/mapbox/mobile-metrics/pipeline?circle-token=${MOBILE_METRICS_TOKEN}"
          else
            echo "MOBILE_METRICS_TOKEN not provided"
          fi

jobs:
  pod-job:
    parameters:
      update:
        type: boolean
        default: false
      iOS:
        type: string
        default: "14.4"
      xcode:
        type: string
        default: "12.4.0"
      lint:
        type: boolean
        default: false
      archive:
        type: boolean
        default: false
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *install-cocoapods-installation
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - *update-carthage-version
      - *restore-cache-podmaster
      - *restore-cache-cocoapods-installation
      - *restore-cache-cocoapods
      - when:
          condition: << parameters.update >>
          steps:
            - run: cd Tests/CocoaPodsTest/PodInstall && bundle exec pod update --repo-update
      - unless:
          condition: << parameters.update >>
          steps:
            - run: cd Tests/CocoaPodsTest/PodInstall && bundle exec pod install --repo-update
      - run: cd Tests/CocoaPodsTest/PodInstall && xcodebuild -workspace PodInstall.xcworkspace -scheme PodInstall -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=iPhone 8 Plus' clean build | xcpretty
      - when:
          condition: << parameters.archive >>
          steps:
            - run: cd Tests/CocoaPodsTest/PodInstall && xcodebuild -workspace PodInstall.xcworkspace -scheme PodInstall -sdk iphoneos<< parameters.iOS >> -destination generic/platform=iOS clean archive CODE_SIGNING_ALLOWED="NO" | xcpretty
      - when:
          condition: << parameters.lint >>
          steps:
            - run: find . -path '*.podspec' -exec perl -pi -e 's/.+\.social_media_url.+//' {} \;
            - run: bundle exec pod lib lint MapboxCoreNavigation.podspec
      - *save-cache-podmaster
      - *save-cache-cocoapods
      - *save-cache-cocoapods-installation

  build-job:
    parameters:
      xcode:
        type: string
        default: "12.4.0"
      device:
        type: string
        default: "iPhone 12 Pro Max"
      iOS:
        type: string
        default: "14.4"
      spm:
        type: boolean
        default: false
      test:
        type: boolean
        default: true
      codecoverage:
        type: boolean
        default: false
      verify_localization:
        type: boolean
        default: true
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - run:
          name: Install prerequisites
          command: if [ $(xcversion simulators | grep -cF "iOS << parameters.iOS >> Simulator (installed)") -eq 0 ]; then xcversion simulators --install="iOS << parameters.iOS >>" || true; fi
      - when: # Simulator is needed only for tests
          condition: << parameters.test >>
          steps:
            - run:          
                name: pre-start simulator
                command: xcrun instruments -w "<< parameters.device >> (<< parameters.iOS >>) [" || true
      - when:
          condition: << parameters.verify_localization >>
          steps:
            - *verify-missing-localizable-strings
      - *add-github-to-known-hosts
      - when:
          condition:
            not: << parameters.spm >>
          steps:
            - *update-carthage-version
            - restore-carthage-cache:
                xcode: << parameters.xcode >>
            - carthage-bootstrap
            - save-carthage-cache:
                xcode: << parameters.xcode >>
            - run:
                name: MapboxCoreNavigation
                command: xcodebuild -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' -project MapboxNavigation.xcodeproj -scheme MapboxCoreNavigation clean build <<# parameters.test >>test <</ parameters.test >> <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >>
      - when:
          condition: << parameters.spm >>
          steps:
            - run:
                name: Move Xcode project aside
                command: mv MapboxNavigation.xcodeproj MapboxNavigation.xcodeproj-aside
            - run:
                name: MapboxNavigation-Package
                command: xcodebuild -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' -scheme MapboxNavigation-Package build <<# parameters.test >>test <</ parameters.test >> <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >>
            - run:
                name: Move Xcode project back in place
                command: mv MapboxNavigation.xcodeproj-aside MapboxNavigation.xcodeproj
      - when:
          condition: << parameters.codecoverage >>
          steps:
            - run:
                name: Send code coverage
                command: bash <(curl -s https://codecov.io/bash)

  xcode-12-examples:
    parameters:
      xcode:
        type: string
        default: "12.4.0"
      spm:
        type: boolean
        default: true
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - *add-github-to-known-hosts
      - *build-Example

  ios-trigger-metrics:
    parameters:
      xcode:
        type: string
        default: "12.4.0"
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - *trigger-metrics
  
  spm-test-job:
    parameters:
      xcode:
        type: string
        default: "12.4.0"
      device:
        type: string
      iOS:
        type: string
        default: "14.4"        
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - *add-github-to-known-hosts
      - run:
          name: Move Xcode project aside
          command: rm -rf *.xcodeproj
      - run:
          name: Run xcodebuild for Package.swift
          command: xcodebuild -scheme MapboxNavigation-Package test -destination "platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>" | xcpretty

  get-api-log-job:
    parameters:
      xcode:
        type: string
        default: "12.4.0"
      device:
        type: string
        default: "iPhone 12 Pro Max"
      iOS:
        type: string
        default: "14.4"
      commit_hash: 
        description: "git hash of the commit to be used for generating logs in api_logs folder"
        type: string        
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1        
    steps:      
      - restore-api-diff-cache:
          key: << parameters.commit_hash >>
      - run:
          name: "Check if cache already exists"
          command: |
            API_LOGS_DIR=api_logs
            if test -d "$API_LOGS_DIR"; then
                echo "API logs cache at $API_LOGS_DIR exist. Finishing job."
                circleci step halt
            else
                echo "API logs cache at $API_LOGS_DIR doesnt exist. Building from scratch."
            fi
      - checkout
      - *add-github-to-known-hosts
      - *prepare-mapbox-file
      - *prepare-netrc-file
      - *update-carthage-version
      - *add-github-to-known-hosts
      - run:
          name: Checking out commit
          command: git checkout << parameters.commit_hash >>
      - restore-carthage-cache:
          xcode: << parameters.xcode >>
      - carthage-bootstrap
      - save-carthage-cache:
          xcode: << parameters.xcode >>
      - build-api-diff-cli-tool
      - run:
          name: Move Xcode project aside
          command: rm -rf *.xcodeproj
      - run_api_log_in_current_env:
          iOS: << parameters.iOS >>
          device: << parameters.device >>
      - save-api-diff-cache:
          key: << parameters.commit_hash >>

  api-diff-job:
    parameters:
      xcode:
        type: string
        default: "12.4.0"
      device:
        type: string
        default: "iPhone 12 Pro Max"
      iOS:
        type: string
        default: "14.4"
      base_api_commit_hash:
        description: "The hash of the commit which will be used as a base API from which breaking changes should be detected. It should be the commit hash of the first mayor release of the release this build targets. For example: If the latest release is 2.3.1 the base api commit hash should be the hash of the 2.0.0 tag"
        type: string
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *add-github-to-known-hosts
      - build-api-diff-cli-tool
      - restore-api-diff-cache:
          key: .Environment.CIRCLE_SHA1
          is_template: true
      - run:
          name: Pick current API
          command: mv api_logs new_api
      - restore-api-diff-cache:
          key: << parameters.base_api_commit_hash >>
      - run:
          name: Pick old API
          command: mv api_logs old_api
      - run:
          name: Generating MapboxCoreNavigation API Diff
          command: ./scripts/swift-api-diff/.build/release/swift-api-diff diff $CIRCLE_WORKING_DIRECTORY/old_api/core_navigation_log.json -i $CIRCLE_WORKING_DIRECTORY/new_api/core_navigation_log.json
      - run:
          name: Generating MapboxNavigation API Diff
          command: ./scripts/swift-api-diff/.build/release/swift-api-diff diff $CIRCLE_WORKING_DIRECTORY/old_api/navigation_log.json -i $CIRCLE_WORKING_DIRECTORY/new_api/navigation_log.json
      

workflows:
  api-diff-workflow:
    jobs:
      - get-api-log-job:
          name: "Get old API logs"
          commit_hash: "61bc7f5d2cf257eb955f7188f9641cb8bf41fa83"
      - get-api-log-job:
          name: "Get new API logs"
          commit_hash: << pipeline.git.revision >>
      - api-diff-job-approval:
          name: "Start v2 API verification"
          type: approval
      - api-diff-job:
          name: "Verify no breaking API changes introduced"
          base_api_commit_hash: "61bc7f5d2cf257eb955f7188f9641cb8bf41fa83"
          requires:
            - "Get old API logs"
            - "Get new API logs"
            - "Start v2 API verification"
  builds-workflow:
    jobs:
      - build-job:
          name: "Xcode_12.4_iOS_14.4"
          xcode: "12.4.0"
          iOS: "14.4"
          device: "iPhone 12 Pro Max"
      - build-job:
          name: "Xcode_12.4_iOS_14.4_SPM"
          xcode: "12.4.0"
          iOS: "14.4"
          device: "iPhone 12 Pro Max"
          spm: true
          codecoverage: false
      - pod-job:
          name: "Xcode_12.0_iOS_14.0_CP_install"
          update: false
          xcode: "12.0.0"
          iOS: "14.0"
          archive: true
      - pod-job:
          name: "Xcode_12.0_iOS_14.0_CP_update"
          update: true
          xcode: "12.0.0"
          iOS: "14.0"
          lint: true
      - xcode-12-examples
      - spm-test-job:
          name: "swift test; Xcode 12.4; iOS 13.7"
          xcode: "12.4.0"
          iOS: "13.7"          
          device: "iPhone 11 Pro Max"
      - spm-test-job:
          name: "swift test; Xcode 12.4; iOS 14.4"
          xcode: "12.4.0"
          iOS: "14.4"          
          device: "iPhone 12 Pro Max"
      - ios-trigger-metrics:
          filters:
            branches:
              only: release-v2.0
